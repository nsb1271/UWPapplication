<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <StreamGeometry x:Key="roundedCheckBoxOptionMark">
        M 12,4.5 7,9.5 5,7.5 3.5,9 7,12.5 13.5,6 z
    </StreamGeometry>

    <RectangleGeometry 
        x:Key="roundedCheckBoxIndeterminateMark" 
        Rect="5,5,7,7" 
        RadiusX="1" 
        RadiusY="1" />

    <RectangleGeometry 
        x:Key="roundedCheckBoxBorderGeometry" 
        Rect="1,1,15,15" 
        RadiusX="1" 
        RadiusY="1" />

    <Style x:Key="RoundedCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource GHTextBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Margin" Value="1"/>
        <Setter Property="Padding" Value="5,0,0,0" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource NegativeMarginFocusVisual}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <ControlTemplate.Resources>
                        <Color x:Key="DefaultForeground">#FFB7B7B7</Color>
                        <SolidColorBrush x:Key="DefaultForegroundBrush" Color="{StaticResource DefaultForeground}" />
                        <Color x:Key="DefaultBackground">#00E3EDF6</Color>
                        <SolidColorBrush x:Key="DefaultBackgroundBrush" Color="{StaticResource DefaultBackground}" />
                        <Color x:Key="MouseOverForeground">#FF4EA6EA</Color>
                        <SolidColorBrush x:Key="MouseOverForegroundBrush" Color="{StaticResource MouseOverForeground}" />
                        <Color x:Key="PressedForeground">#FF2764A0</Color>
                        <SolidColorBrush x:Key="PressedForegroundBrush" Color="{StaticResource PressedForeground}" />
                        <Color x:Key="PressedBackground">#FFD8E3EE</Color>
                        <SolidColorBrush x:Key="PressedBackgroundBrush" Color="{StaticResource PressedBackground}" />
                    </ControlTemplate.Resources>

                    <DockPanel LastChildFill="True" x:Name="templateRoot" Background="Transparent" IsHitTestVisible="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Brush)"
                                                                       Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame Value="{StaticResource DefaultBackgroundBrush}"
                                                                    KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Pen).(Pen.Brush)"
                                                                       Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame Value="{StaticResource DefaultForegroundBrush}"
                                                                    KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Brush)"
                                                                       Storyboard.TargetName="mark">
                                            <DiscreteObjectKeyFrame Value="{StaticResource DefaultForegroundBrush}"
                                                                    KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Pen).(Pen.Brush)"
                                                                       Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame Value="{StaticResource MouseOverForegroundBrush}"
                                                                    KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Brush)"
                                                                       Storyboard.TargetName="mark">
                                            <DiscreteObjectKeyFrame Value="{StaticResource MouseOverForegroundBrush}"
                                                                    KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Brush)"
                                                                       Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame Value="{StaticResource PressedBackgroundBrush}"
                                                                    KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Pen).(Pen.Brush)"
                                                                       Storyboard.TargetName="border">
                                            <DiscreteObjectKeyFrame Value="{StaticResource PressedForegroundBrush}"
                                                                    KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Brush)"
                                                                       Storyboard.TargetName="mark">
                                            <DiscreteObjectKeyFrame Value="{StaticResource PressedForegroundBrush}"
                                                                    KeyTime="0" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation To="0.3" Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="templateRoot" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Geometry)" Storyboard.TargetName="mark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource roundedCheckBoxOptionMark}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked"/>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Geometry)" Storyboard.TargetName="mark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource roundedCheckBoxIndeterminateMark}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Image 
                            UseLayoutRounding="True" 
                            SnapsToDevicePixels="True" 
                            IsHitTestVisible="False" 
                            Height="17" 
                            Width="17" 
                            DockPanel.Dock="Left" 
                            Margin="1"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <DrawingGroup>

                                            <GeometryDrawing x:Name="border" Geometry="{StaticResource roundedCheckBoxBorderGeometry}">

                                                <GeometryDrawing.Pen>
                                                    <Pen Thickness="1" />
                                                </GeometryDrawing.Pen>

                                            </GeometryDrawing>

                                            <GeometryDrawing x:Name="focusRect" Geometry="{StaticResource roundedCheckBoxBorderGeometry}">

                                                <GeometryDrawing.Pen>
                                                    <Pen Thickness="1" />
                                                </GeometryDrawing.Pen>

                                            </GeometryDrawing>

                                            <GeometryDrawing x:Name="mark" Geometry="">

                                            </GeometryDrawing>

                                        </DrawingGroup>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>

                        <ContentPresenter 
                            x:Name="contentPresenter" 
                            DockPanel.Dock = "Left"
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BlueRoundedCheckBox" BasedOn="{StaticResource RoundedCheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">

                    <ControlTemplate.Resources>
                        <QuinticEase
                            x:Key="GitHubDefaultEaseInOut"
                            EasingMode="EaseInOut" 
                            PresentationOptions:Freeze="true" />
                        <QuinticEase
                            x:Key="GitHubDefaultEaseIn"
                            EasingMode="EaseIn"
                            PresentationOptions:Freeze="true" />
                        <QuinticEase
                            EasingMode="EaseOut"
                            x:Key="GitHubDefaultEaseOut" 
                            PresentationOptions:Freeze="true" />

                        <Color x:Key="DefaultForeground">#FFB7B7B7</Color>
                        <Color x:Key="DefaultBackground">#00E3EDF6</Color>
                        <Color x:Key="UncheckedForeground">#6B97BF</Color>
                        <Color x:Key="CheckedForeground">#4D89C1</Color>
                    </ControlTemplate.Resources>

                    <DockPanel LastChildFill="True" x:Name="templateRoot" Background="Transparent" IsHitTestVisible="True">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimation To="1" Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="templateRoot" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation To="0.3" Duration="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="templateRoot" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource CheckedForeground}" Duration="0" EasingFunction="{StaticResource GitHubDefaultEaseInOut}" Storyboard.TargetProperty="(GeometryDrawing.Pen).(Pen.Brush).(SolidColorBrush.Color)" Storyboard.TargetName="border" />
                                        <ColorAnimation To="{StaticResource CheckedForeground}" Duration="0" EasingFunction="{StaticResource GitHubDefaultEaseInOut}" Storyboard.TargetProperty="(GeometryDrawing.Brush).(SolidColorBrush.Color)" Storyboard.TargetName="mark" />
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Geometry)" Storyboard.TargetName="mark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource roundedCheckBoxOptionMark}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked">
                                    <Storyboard>
                                        <ColorAnimation To="{StaticResource UncheckedForeground}" Duration="0" EasingFunction="{StaticResource GitHubDefaultEaseInOut}" Storyboard.TargetProperty="(GeometryDrawing.Pen).(Pen.Brush).(SolidColorBrush.Color)" Storyboard.TargetName="border" />
                                        <ColorAnimation To="{StaticResource UncheckedForeground}" Duration="0" EasingFunction="{StaticResource GitHubDefaultEaseInOut}" Storyboard.TargetProperty="(GeometryDrawing.Brush).(SolidColorBrush.Color)" Storyboard.TargetName="mark" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(GeometryDrawing.Geometry)" Storyboard.TargetName="mark">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource roundedCheckBoxIndeterminateMark}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>

                        </VisualStateManager.VisualStateGroups>

                        <Image 
                            UseLayoutRounding="True" 
                            SnapsToDevicePixels="True" 
                            IsHitTestVisible="False" 
                            Height="16" 
                            Width="16" 
                            DockPanel.Dock="Left"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Image.Source>
                                <DrawingImage>
                                    <DrawingImage.Drawing>
                                        <DrawingGroup>

                                            <GeometryDrawing x:Name="border"
                                                             Geometry="{StaticResource roundedCheckBoxBorderGeometry}">

                                                <GeometryDrawing.Brush>
                                                    <SolidColorBrush Color="{StaticResource DefaultBackground}" />
                                                </GeometryDrawing.Brush>

                                                <GeometryDrawing.Pen>
                                                    <Pen Thickness="2">
                                                        <Pen.Brush>
                                                            <SolidColorBrush Color="{StaticResource DefaultForeground}" />
                                                        </Pen.Brush>
                                                    </Pen>
                                                </GeometryDrawing.Pen>

                                            </GeometryDrawing>

                                            <GeometryDrawing x:Name="focusRect"
                                                             Geometry="{StaticResource roundedCheckBoxBorderGeometry}">

                                                <GeometryDrawing.Pen>
                                                    <Pen Thickness="1">
                                                        <Pen.Brush>
                                                            <SolidColorBrush Color="Transparent" />
                                                        </Pen.Brush>
                                                    </Pen>
                                                </GeometryDrawing.Pen>

                                            </GeometryDrawing>


                                            <GeometryDrawing x:Name="mark"
                                                             Geometry="">

                                                <GeometryDrawing.Brush>
                                                    <SolidColorBrush Color="{StaticResource DefaultForeground}" />
                                                </GeometryDrawing.Brush>

                                            </GeometryDrawing>

                                        </DrawingGroup>
                                    </DrawingImage.Drawing>
                                </DrawingImage>
                            </Image.Source>
                        </Image>

                        <ContentPresenter 
                            x:Name="contentPresenter" 
                            DockPanel.Dock = "Left"
                            Focusable="False" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Margin="{TemplateBinding Padding}" 
                            RecognizesAccessKey="True" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>